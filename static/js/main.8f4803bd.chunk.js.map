{"version":3,"sources":["Components/Button.jsx","Components/Header.jsx","Components/Task.jsx","Components/Tasks.jsx","Components/AddTask.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","Header","title","showAdd","onAdd","defaultProps","Task","task","deleteTask","toggle","remainder","onDoubleClick","id","cursor","date","Tasks","tasks","map","i","TaskForm","addTask","useState","setText","setDate","setRem","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","width","checked","currentTarget","App","showAddTask","setShowAddTask","setTasks","border","AddTask","Math","floor","random","newTask","length","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8f4803bd.chunk.js","sourcesContent":["const Button = ({ color, text, onClick }) => {\r\n  return (\r\n    <button\r\n      onClick={onClick}\r\n      style={{ backgroundColor: color }}\r\n      className='btn text-white'\r\n    >\r\n      {text}\r\n    </button>\r\n  );\r\n};\r\n// Button.defaultProps = {};\r\n// Button.propTypes = {\r\n//   text: propTypes.string,\r\n// };\r\nexport default Button;\r\n","import React from 'react';\r\nimport Button from './Button';\r\nimport propTypes from 'prop-types';\r\n\r\nfunction Header({ title, showAdd, onAdd }) {\r\n  return (\r\n    <header className='d-flex align-items-center text-capitalize justify-content-between'>\r\n      <h1 className='text-capitalize'>{title}</h1>\r\n      <Button\r\n        color={showAdd ? 'rgb(138, 68, 68)' : 'rgb(230, 168, 168)'}\r\n        text={showAdd ? 'Close' : 'Add'}\r\n        onClick={onAdd}\r\n      />\r\n    </header>\r\n  );\r\n}\r\nHeader.defaultProps = {\r\n  title: 'task tracker',\r\n};\r\nHeader.propTypes = {\r\n  title: propTypes.string.isRequired,\r\n};\r\nexport default Header;\r\n","import React from 'react';\r\nimport { FaTimes } from 'react-icons/fa';\r\n\r\nfunction Task({ task, deleteTask, toggle }) {\r\n  return (\r\n    <div\r\n      className={`px-3 my-2 rounded ${task.remainder ? 'remainder' : ''}`}\r\n      style={{ backgroundColor: '#92dcdf38' }}\r\n      onDoubleClick={() => toggle(task.id)}\r\n    >\r\n      <h5 className='text-capitalize d-flex justify-content-between pt-3'>\r\n        {task.text}\r\n        <FaTimes\r\n          style={{ color: '#fff', cursor: 'pointer' }}\r\n          onClick={() => deleteTask(task.id)}\r\n        />\r\n      </h5>\r\n      <p className='pb-2'>{task.date}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Task;\r\n","import React, { Fragment } from 'react';\r\nimport Task from './Task';\r\n\r\nfunction Tasks({ tasks, deleteTask, toggle}) {\r\n  return (\r\n    <Fragment>\r\n      {tasks.map((task, i) => (\r\n        <Task key={i} task={task} deleteTask={deleteTask} toggle={toggle} />\r\n      ))}\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default Tasks;\r\n","import React, { Fragment } from 'react';\r\nimport { useState } from 'react';\r\n\r\nconst TaskForm = ({ addTask }) => {\r\n  // state\r\n  const [text, setText] = useState('');\r\n  const [date, setDate] = useState('');\r\n  const [remainder, setRem] = useState(false);\r\n\r\n  // on submit btn function\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!text) {\r\n      alert('Please add a task');\r\n      return;\r\n    }\r\n    addTask({ text, date, remainder });\r\n    setText('');\r\n    setDate('');\r\n    setRem(false);\r\n  };\r\n  return (\r\n    <Fragment>\r\n      <form className='text-capitalize mb-5' onSubmit={onSubmit}>\r\n        <div className='form-group '>\r\n          <label>task</label>\r\n          <input\r\n            className='form-control'\r\n            type='text'\r\n            placeholder='Add Task'\r\n            value={text}\r\n            onChange={(e) => setText(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <label>date & time</label>\r\n          <input\r\n            className='form-control'\r\n            type='text'\r\n            placeholder='Add Date'\r\n            value={date}\r\n            onChange={(e) => setDate(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className='form-group d-flex align-items-center justify-content-between'>\r\n          <label>set remainder</label>\r\n          <input\r\n            width='40'\r\n            className=''\r\n            type='checkbox'\r\n            checked={remainder}\r\n            value={remainder}\r\n            onChange={(e) => setRem(e.currentTarget.checked)}\r\n          />\r\n        </div>\r\n        <input\r\n          type='submit'\r\n          value='Save'\r\n          className='btn btn-block bg-white text-info'\r\n        />\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default TaskForm;\r\n","import React, { Fragment } from 'react';\nimport Header from './Components/Header.jsx';\nimport Tasks from './Components/Tasks.jsx';\nimport { useState } from 'react';\nimport AddTask from './Components/AddTask.jsx';\n// import { Route, Switch, Redirect } from 'react-router-dom';\n\nconst App = () => {\n  const [showAddTask, setShowAddTask] = useState(false);\n  //  How to use the state in a function using React\n  //  tasks for loop and setTasks for the amendment like\n  //  pushing data\n  const [tasks, setTasks] = useState([\n    {\n      id: 1,\n      text: 'Dental clinic appointment',\n      date: '25 Feb 12:30 am',\n    },\n    {\n      id: 2,\n      text: 'React course',\n      date: '26 Feb 07:30 pm',\n    },\n    {\n      id: 3,\n      text: 'Node.js training project',\n      date: '03 Mae 5:30 pm',\n    },\n    {\n      id: 4,\n      text: 'Bank Deposit',\n      date: '9 Mar 09:30 am',\n    },\n  ]);\n  // Add a new task\n  const addTask = (task) => {\n    const id = Math.floor(Math.random() * 10000) + 1;\n    const newTask = { id, ...task };\n    setTasks([...tasks, newTask]);\n  };\n  // Delete task\n  const deleteTask = (id) => {\n    setTasks(tasks.filter((task) => task.id !== id));\n  };\n  //Toggle remainder\n  const toggleRemainder = (id) => {\n    setTasks(\n      tasks.map((task) =>\n        task.id === id ? { ...task, remainder: !task.remainder } : task\n      )\n    );\n  };\n  return (\n    <Fragment>\n      <div className='container py-2 d-flex align-items-center justify-content-center'>\n        <div\n          className='p-4'\n          style={{ width: '600px', border: '2px solid #ddd' }}\n        >\n          <Header\n            onAdd={() => setShowAddTask(!showAddTask)}\n            showAdd={showAddTask}\n          />\n          {showAddTask && <AddTask addTask={addTask} />}\n\n          {tasks.length > 0 ? (\n            <Tasks\n              tasks={tasks}\n              deleteTask={deleteTask}\n              toggle={toggleRemainder}\n            />\n          ) : (\n            'No tasks to show'\n          )}\n        </div>\n      </div>\n    </Fragment>\n  );\n};\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.jsx';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'jquery/dist/jquery.min.js';\nimport 'popper.js/dist/umd/popper.min.js';\nimport 'bootstrap/dist/js/bootstrap.min.js';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport './index.css';\nimport { BrowserRouter } from 'react-router-dom';\n\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}